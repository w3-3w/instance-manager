# =========================================================
# Basically, you don't have to modify this file.
# Only modify this file when you know what you are doing.
# =========================================================

custom: ${file(./config.js)}

service: savingway-${self:custom.group}
frameworkVersion: ">=1.29.2"

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ${self:custom.region}
  versionFunctions: false
  logRetentionInDays: ${self:custom.logRetentionInDays}
  timeout: 10
  environment:
    DEFAULT_AWS_REGION: ${self:custom.region}
    SLACK_INCOMING_WEBHOOK: ${self:custom.slack.incomingWebhookUrl}
    SLACK_VERIFICATION_TOKEN: ${self:custom.slack.verificationToken}
    SLACK_TEAM_ID: ${self:custom.slack.teamId}
    SLACK_CHANNEL_ID: ${self:custom.slack.channelId}
    SLACK_PERMITTED_USER_IDS: ${self:custom.slack.permittedUserIds}
    TARGET_TAG_KEY: ${self:custom.tag.key}
    TARGET_TAG_VALUE: ${self:custom.tag.scheduledValue}
    EVENT_RULE_PREFIX: savingway-${self:custom.group}
    EVENT_EXCLUDED_DAYS: ${self:custom.event.excludeDays}
    TIMEZONE_OFFSET: ${self:custom.timezoneOffset}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "events:ListRules"
        - "ec2:DescribeInstances"
        - "rds:DescribeDBInstances"
        - "rds:ListTagsForResource"
      Resource: "*"
    - Effect: Allow
      Action:
        - "events:EnableRule"
        - "events:DisableRule"
      # only allow operations on specified prefix
      Resource: "arn:${self:custom.partition}:events:*:*:rule/savingway-${self:custom.group}-*"
    - Effect: Allow
      Action:
        - "ec2:StartInstances"
        - "ec2:StopInstances"
      Resource: "*"
      # only allow operations on ec2 instances with configured tag key
      Condition:
        "Null": ${file(./helper/iamPolicyConditionHelper.js):ec2}
    - Effect: Allow
      Action:
        - "rds:StartDBInstance"
        - "rds:StopDBInstance"
      Resource: "*"
      # only allow operations on rds instances with configured tag key
      Condition:
        "Null": ${file(./helper/iamPolicyConditionHelper.js):rds}

functions:
  scheduledStartEC2:
    handler: schedule.ec2Start
    description: Starts EC2 instances on schedule
    events:
      - schedule:
          enabled: ${self:custom.event.initiallyEnable}
          name: savingway-${self:custom.group}-ec2-start
          description: starts EC2 instances
          rate: ${self:custom.event.ec2.startCron}
  scheduledStopEC2:
    handler: schedule.ec2Stop
    description: Stops EC2 instances on schedule
    events:
      - schedule:
          enabled: ${self:custom.event.initiallyEnable}
          name: savingway-${self:custom.group}-ec2-stop
          description: stops EC2 instances
          rate: ${self:custom.event.ec2.stopCron}
  scheduledStartRDS:
    handler: schedule.rdsStart
    description: Starts RDS instances on schedule
    events:
      - schedule:
          enabled: ${self:custom.event.initiallyEnable}
          name: savingway-${self:custom.group}-rds-start
          description: starts RDS instances
          rate: ${self:custom.event.rds.startCron}
  scheduledStopRDS:
    handler: schedule.rdsStop
    description: Stops RDS instances on schedule
    events:
      - schedule:
          enabled: ${self:custom.event.initiallyEnable}
          name: savingway-${self:custom.group}-rds-stop
          description: stops RDS instances
          rate: ${self:custom.event.rds.stopCron}
  slackControl: ${file(./helper/slackEnableHelper.js)}

package:
  exclude:
    - README.md
    - LICENSE
    - config.js
    - _config.js
    - helper/**
